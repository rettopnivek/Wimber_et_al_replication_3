segments(c(0,-.05),c(-.05,0),c(0,.05),c(.05,0),lwd=2)
Sys.sleep(.02)
plot(c(-1,1),c(-1,1),type='n')
segments(c(0,-.05),c(-.05,0),c(0,.05),c(.05,0),lwd=2)
polygon(x,-y)
Sys.sleep(.05)
plot(c(-1,1),c(-1,1),type='n')
segments(c(0,-.05),c(-.05,0),c(0,.05),c(.05,0),lwd=2)
plot(c(-1,1),c(-1,1),type='n')
segments(c(0,-.05),c(-.05,0),c(0,.05),c(.05,0),lwd=2)
polygon(x,y)
Sys.sleep(.05)
plot(c(-1,1),c(-1,1),type='n')
segments(c(0,-.05),c(-.05,0),c(0,.05),c(.05,0),lwd=2)
Sys.sleep(.02)
plot(c(-1,1),c(-1,1),type='n')
segments(c(0,-.05),c(-.05,0),c(0,.05),c(.05,0),lwd=2)
polygon(x,-y)
Sys.sleep(.05)
plot(c(-1,1),c(-1,1),type='n')
segments(c(0,-.05),c(-.05,0),c(0,.05),c(.05,0),lwd=2)
Rcpp::sourceCpp('I:/Stuff/Kevin\'s Stuff/Grad School stuff/Summer 2014/Race_Wald/BE_functions.cpp')
37000/12
3000 - 900 - 200 - 1000 - 500 - 200
3000 - 900 - 200 - 200 - 1000 - 200
plot(c(0,1),c(0,1),type='n',xaxt='n',yaxt='n',bty='n')
plot(c(0,1),c(0,1),type='n',xaxt='n',yaxt='n',bty='n',xlab='',ylab='')
text(.5,.5,'potter0449')
setwd("~/")
jpeg('Wifi_password.jpg',width=7,height=7)
plot(c(0,1),c(0,1),type='n',xaxt='n',yaxt='n',bty='n',xlab='',ylab='')
text(.5,.5,'potter0449')
dev.off()
jpeg('Wifi_password.jpg',width=7,height=7,inches=T)
plot(c(0,1),c(0,1),type='n',xaxt='n',yaxt='n',bty='n',xlab='',ylab='')
text(.5,.5,'potter0449')
dev.off()
?jpeg
jpeg('Wifi_password.jpg',width=480,height=480)
plot(c(0,1),c(0,1),type='n',xaxt='n',yaxt='n',bty='n',xlab='',ylab='')
text(.5,.5,'potter0449')
dev.off()
A = rbeta(10,1,1)
R = rbeta(10,1,1)
I = R + (1 - R)*A
E = (1 - R)*A
I
E
Iobs = rbinom(J,I)
J = 10
A = rbeta(J,1,1)
R = rbeta(J,1,1)
I = R + (1 - R)*A
E = (1 - R)*A
Iobs = rbinom(J,I)
Iobs = rbinom(J,1,I)
Iobs
Eobs = rbinom(J,1,I)
Eobs
pnorm
alpha.r = -1
beta.r = 1.5
mu.r = .5
r = alpha.r + beta.r + mu.r
R = pnorm(r)
R
library(MASS)
Sigma = matrix( c(1.00, 0.50, 0.25,
0.50, 1.00, 0.50,
0.25, 0.50, 1.00), 3,3)
Sigma
mvrnorm(c(0,0),Sigma)
mvrnorm(1,c(0,0),Sigma)
mvrnorm(2,c(0,0),Sigma)
mvrnorm
mvrnorm(1,c(0,0,0),Sigma)
Sigma = matrix( c(1.00, 0.50,
0.50, 1.00), 2,2)
mvrnorm(1,c(0,0,0),Sigma)
mvrnorm(1,c(0,0),Sigma)
tmp = mvrnorm(I,c(0,0),Sigma)
alpha.r = tmp[1]; alpha.a = tmp[2]
I
I=30 # Number of participants
tmp = mvrnorm(I,c(0,0),Sigma)
tmp
alpha.r = tmp[,1]; alpha.a = tmp[,2]
rm(tmp)
tmp = mvrnorm(J,c(0,0),Sigma)
beta.r = tmp[,1]; beta.a = tmp[,2]
rm(tmp)
alpha.r
alpha.a
beta.r
beta.a
3 % 2
3 %% 2
4 %% 2
5 %% 2
5 %% 23
5 %% 3
500 %% 60
60/2
floor(500/60)
500 %% ifi
ifi = 16.7
500 %% ifi
ifi/2
cutoff = ifi/2
floor(500/60)
floor(500/ifi)
remainder = interval %% ifi
interval = 500
ifi = 16.7
cutoff = ifi/2
remainder = interval %% ifi
ceiling(inteval/ifi)
ceiling(interval/ifi)
if (remainder <= cutoff) numFrames = floor(interval/ifi)
interval = 500
ifi = 16.7
cutoff = ifi/2
remainder = interval %% ifi
if (remainder > cutoff) numFrames = ceiling(interval/ifi)
if (remainder <= cutoff) numFrames = floor(interval/ifi)
remainder
numFrames
runif()
runif(1)
plot(c(0,1),c(0,1),xaxt='n',yaxt='n',bty='n',type='n')
plot(c(0,1),c(0,1),xaxt='n',yaxt='n',bty='n',type='n',xlab='',ylab='')
runif(3)
rng_pos=runif(3)
plot(c(0,15),c(0,29),xaxt='n',yaxt='n',bty='n',type='n',xlab='',ylab='')
segments(rng_pos*15,rep(0,3),rng_pos*15,rep(29,3))
x1 = rng_pos*c(15,0,0)
x1
rng_pos=runif(3)
x1 = c(rng_pos[1]*15,0,rng_pos[1]*15)
x2 = c(rng_pos[1]*15,rng_pos[1]*15,15)
y1 = c(0,rng_pos[2]*29,0)
y2 = c(29,29,rng_pos[3]*29)
segments(x1,y1,x2,y2)
plot(c(0,15),c(0,29),xaxt='n',yaxt='n',bty='n',type='n',xlab='',ylab='')
rng_pos=runif(3)
x1 = c(rng_pos[1]*15,0,rng_pos[1]*15)
x2 = c(rng_pos[1]*15,rng_pos[1]*15,15)
y1 = c(0,rng_pos[2]*29,0)
y2 = c(29,29,rng_pos[3]*29)
segments(x1,y1,x2,y2)
plot(c(0,15),c(0,29),xaxt='n',yaxt='n',bty='n',type='n',xlab='',ylab='')
rng_pos=runif(3)
x1 = c(rng_pos[1]*15,0,rng_pos[1]*15,0)
x2 = c(rng_pos[1]*15,rng_pos[1]*15,15,15)
y1 = c(0,rng_pos[2]*29,0,rng_pos[2]*29)
y2 = c(29,29,rng_pos[3]*29,rng_pos[3]*29)
segments(x1,y1,x2,y2)
plot(c(0,15),c(0,29),xaxt='n',yaxt='n',bty='n',type='n',xlab='',ylab='')
rng_pos=runif(3)
x1 = c(rng_pos[1]*15,0,rng_pos[1]*15,0)
x2 = c(rng_pos[1]*15,rng_pos[1]*15,15,15)
y1 = c(0,rng_pos[2]*29,0,rng_pos[2]*29)
y2 = c(29,29,rng_pos[3]*29,rng_pos[3]*29)
segments(x1,y1,x2,y2)
plot(c(0,15),c(0,29),xaxt='n',yaxt='n',bty='n',type='n',xlab='',ylab='')
rng_pos=runif(3)
x1 = c(rng_pos[1]*15,0,rng_pos[1]*15,0)
x2 = c(rng_pos[1]*15,rng_pos[1]*15,15,15)
y1 = c(0,rng_pos[2]*29,0,rng_pos[2]*29)
y2 = c(29,29,rng_pos[3]*29,rng_pos[3]*29)
segments(x1,y1,x2,y2)
x11()
plot(c(0,15),c(0,29),xaxt='n',yaxt='n',bty='n',type='n',xlab='',ylab='')
rng_pos=runif(3)
x1 = c(rng_pos[1]*15,0,rng_pos[1]*15,0)
x2 = c(rng_pos[1]*15,rng_pos[1]*15,15,15)
y1 = c(0,rng_pos[2]*29,0,rng_pos[2]*29)
y2 = c(29,29,rng_pos[3]*29,rng_pos[3]*29)
segments(x1,y1,x2,y2)
plot(c(0,15),c(0,29),xaxt='n',yaxt='n',bty='n',type='n',xlab='',ylab='')
rng_pos=runif(3)
x1 = c(rng_pos[1]*15,0,rng_pos[1]*15,0)
x2 = c(rng_pos[1]*15,rng_pos[1]*15,15,15)
y1 = c(0,rng_pos[2]*29,0,rng_pos[2]*29)
y2 = c(29,29,rng_pos[3]*29,rng_pos[3]*29)
segments(x1,y1,x2,y2)
plot(c(0,15),c(0,29),xaxt='n',yaxt='n',bty='n',type='n',xlab='',ylab='')
rng_pos=runif(3)
x1 = c(rng_pos[1]*15,0,rng_pos[1]*15,0)
x2 = c(rng_pos[1]*15,rng_pos[1]*15,15,15)
y1 = c(0,rng_pos[2]*29,0,rng_pos[2]*29)
y2 = c(29,29,rng_pos[3]*29,rng_pos[3]*29)
segments(x1,y1,x2,y2)
plot(c(0,15),c(0,29),xaxt='n',yaxt='n',bty='n',type='n',xlab='',ylab='')
rng_pos=runif(3)
x1 = c(rng_pos[1]*15,0,rng_pos[1]*15,0)
x2 = c(rng_pos[1]*15,rng_pos[1]*15,15,15)
y1 = c(0,rng_pos[2]*29,0,rng_pos[2]*29)
y2 = c(29,29,rng_pos[3]*29,rng_pos[3]*29)
segments(x1,y1,x2,y2)
plot(c(0,15),c(0,29),xaxt='n',yaxt='n',bty='n',type='n',xlab='',ylab='')
rng_pos=runif(3)
x1 = c(rng_pos[1]*15,0,rng_pos[1]*15,0)
x2 = c(rng_pos[1]*15,rng_pos[1]*15,15,15)
y1 = c(0,rng_pos[2]*29,0,rng_pos[2]*29)
y2 = c(29,29,rng_pos[3]*29,rng_pos[3]*29)
segments(x1,y1,x2,y2)
1800
1800/2
screenXpixels = 1600
screenYpixels = 900
center = c(screenXpixels/2,screenYpixels/2)
center
boxwidth = 32
boxheight = 55
boxwidth*5
boxwidth*5
(boxwidth*5)/2
center[2]
center[1]
center[1] - (boxwidth*5)/2
category = rep(c('F_','O_','S_'),each=48) # Set the categories
f_name = rep('Image_',144)
ext = '.jpg'
images = paste(category,f_name,1:144,ext,sep='') # Combine the strings to
ctgry = rep(c('F','O','S'),each=48) # Clean indicators for the categories
lbl = paste(ctgry,rep('Image',144),1:144)
cues = paste('cue word',1:72)
sel = sample(1:48,48)
first = sel[1:24]
second = sel[25:48]
sel = sample(1:48,48)
first = c(first,sel[1:24]+48)
second = c(second,sel[25:48]+48)
sel = sample(1:48,48)
first = c(first,sel[1:24]+96)
second = c(second,sel[25:48]+96)
# Next reorganize the second set so that the
# categories don't match between sets
sel = c(25:48,49:72)
sel = sample(sel,48)
temp = sel[1:24]
sel = sel[25:48]
rem = sel[sel<49]
sel = sel[sel>48]
l = 24-length(sel)
sel2 = sample(1:24,24)
sel = sample(c(sel,sel2[1:l]),24)
temp = c(temp,sel)
sel=c(rem,sel2[(l+1):24])
sel = sample(sel,24)
temp = c(temp,sel)
pairings = cbind(sample(1:72,72),first,second[temp])
pairings
cond = c(rep(1,54),rep(1,18))
cond
cond = c(rep(1,54),rep(2,18))
cond
length(cond)
cond = c(rep(1,54),rep(2,18))
pairings = cbind(sample(1:72,72),first,second[temp],cond)
pairings
144/3
setwd("I:/Stuff/Kevin's Stuff/Postdoc/Wimber_et_al_2015_replication/R analyses Pilot")
orig_dir = getwd()
setwd('..')
setwd('Pilot_data_April_10_2015')
N = length(dir())/2 # Divide by 2 because of matlab files
N
f_names = paste('Subject_',1:6,'.csv',sep='')
for (n in 1:N) {
tmp = read.table(f_names[1],header=T,sep=',')
if (n == 1) all.dat = tmp[1,]
all.dat = rbind(all.dat, tmp[-1,]
}
f_names = paste('Subject_',1:6,'.csv',sep='')
for (n in 1:N) {
tmp = read.table(f_names[1],header=T,sep=',')
if (n == 1) all.dat = tmp[1,]
all.dat = rbind(all.dat, tmp[-1,])
}
str(all.dat)
head(all.dat)
nrow(tmp)
all.dat = cbind( rep(1:6,each=306), all.dat)
all.dat = cbind( rep(1:6,each=305), all.dat)
all.dat = c()
for (n in 1:N) {
tmp = read.table(f_names[1],header=T,sep=',')
all.dat = rbind(all.dat, tmp[-1,])
}
all.dat = cbind( rep(1:6,each=305), all.dat)
colnames(all.dat) = c('Subject',colnames(tmp))
head(all.dat)
all.dat = as.data.frame(all.dat)
setwd(orig_dir);
dir()
f_names = paste('S',1:6,'_stimulus_order.csv',sep='')
f_names
tmp = read.table(f_names[1],sep=',',header=T)
tmp
all.order = c()
for (n in 1:N) {
tmp = read.table(f_names[1],header=T,sep=',')
all.order = c( all.order, list(tmp) )
}
all.order[[1]]
all.dat[all.dat$Subject==1,]
head(all.dat)
aggregate(all.dat$Correct,list(all.dat$Subject,all.dat$Cond),mean)
aggregate(all.dat$Accuracy,list(all.dat$Subject,all.dat$Cond),mean)
setwd('..')
setwd('Pilot_data_April_10_2015')
f_names = paste('Subject_',1:6,'.csv',sep='')
# Read in data and convert to data frame
all.dat = c()
for (n in 1:N) {
tmp = read.table(f_names[n],header=T,sep=',')
all.dat = rbind(all.dat, tmp[-1,])
}
all.dat = cbind( rep(1:6,each=305), all.dat)
colnames(all.dat) = c('Subject',colnames(tmp))
all.dat = as.data.frame(all.dat)
setwd(orig_dir);
aggregate(all.dat$Accuracy,list(all.dat$Subject,all.dat$Cond),mean)
ind = all.dat$Cond==1 & all.dat$Subject==1 # Select subset of trials
all.dat[ind,]
ind = all.dat$Cond==6 & all.dat$Subject==1 # Select subset of trials
colnames(all.dat)
all.dat[ind,c('imageIDT','Correct','Response','RT','Accuracy')]
all.order[[1]]
all.order[[1]]$numImage
all.order[[1]]$Base
ind = all.dat$Cond==1 # Select subset of trials
all.dat$imageIDT[ind]
ind = all.dat$Cond==6 # Select subset of trials
tmp = all.dat$imageIDT[ind]
as.character(tmp)
all.dat$imageIDT[ind]
tmp = as.character(all.dat$imageIDT[ind])
tmp
strsplit(tmp[1],split='_')
v1 = strsplit(tmp[1],split='_')
v2 = strsplit(v1,split='.bmp')
v1 = strsplit(tmp[1],split='_')
v2 = strsplit(v1[[1]],split='.bmp')
v2
v1 = strsplit(tmp[1],split='_')
v2 = strsplit(v1[[1]][3],split='.bmp')
v2
v1 = strsplit(tmp[1],split='_')
v2 = as.numeric( strsplit(v1[[1]][3],split='.bmp') )
v2
imNum = matrix(0,length(tmp),2)
for (i in 1:length(tmp)) {
v1 = strsplit(tmp[i],split='_')
v2 = as.numeric( strsplit(v1[[1]][3],split='.bmp') )
imNum[i,2] = v2
}
rm(v1); rm(v2); rm(tmp)
imNum[,1] = all.dat$Subject[ind]
imNum
ord
n=1
ls()
rm(n); rm(f_names);
n=1
ord = cbind( all.order[[n]]$numImage, all.order[[n]]$Base )
ord
for (n in 1:N) {
ord = cbind( all.order[[n]]$numImage, all.order[[n]]$Base )
ind2 = imNum[,1]==n
for (i in 1:nrow(ord)) {
for (j in 1:nrow(imNum[ind2,2])) {
if (imNum[ind2,2] == ord[i,1]) imNum[ind2,3]=ord[i,2]
}
}
}
ind2
imNum[ind2]
imNum[ind2,1]
imNum[ind2,2]
imNum[ind2,3]
ind = all.dat$Cond==6 # Select subset of trials
tmp = as.character(all.dat$imageIDT[ind])
imNum = matrix(0,length(tmp),3)
for (i in 1:length(tmp)) {
v1 = strsplit(tmp[i],split='_')
v2 = as.numeric( strsplit(v1[[1]][3],split='.bmp') )
imNum[i,2] = v2
}
rm(v1); rm(v2); rm(tmp); rm(i)
imNum[,1] = all.dat$Subject[ind]
imNum
for (n in 1:N) {
ord = cbind( all.order[[n]]$numImage, all.order[[n]]$Base )
ind2 = imNum[,1]==n
for (i in 1:nrow(ord)) {
for (j in 1:nrow(imNum[ind2,2])) {
if (imNum[ind2,2] == ord[i,1]) imNum[ind2,3]=ord[i,2]
}
}
}
ind2
for (n in 1:N) {
# Extract baseline status
ord = cbind( all.order[[n]]$numImage, all.order[[n]]$Base )
ind2 = imNum[,1]==n
for (i in 1:nrow(ord)) {
for (j in 1:nrow(imNum[ind2,])) {
if (imNum[ind2,2] == ord[i,1]) imNum[ind2,3]=ord[i,2]
}
}
}
warnings()
imNum[ind2,2]
ind = all.dat$Cond==6 # Select subset of trials
tmp = as.character(all.dat$imageIDT[ind]) # Convert to string
# Extract the image file name and isolate its unique number
imNum = matrix(0,length(tmp),3)
for (i in 1:length(tmp)) {
v1 = strsplit(tmp[i],split='_')
v2 = as.numeric( strsplit(v1[[1]][3],split='.bmp') )
imNum[i,2] = v2
}
rm(v1); rm(v2); rm(tmp); rm(i)
imNum[,1] = all.dat$Subject[ind]
# Link up image with its baseline status
# Loop through subjects
for (n in 1:N) {
# Extract baseline status
ord = cbind( all.order[[n]]$numImage, all.order[[n]]$Base )
ind2 = imNum[,1]==n
for (i in 1:nrow(ord)) {
for (j in 1:nrow(imNum[ind2,])) {
if (imNum[ind2,2][j] == ord[i,1]) imNum[ind2,3][j]=ord[i,2]
}
}
}
imNum
ind = all.dat$Cond==6 # Select subset of trials
tmp = as.character(all.dat$imageIDT[ind]) # Convert to string
# Extract the image file name and isolate its unique number
imNum = matrix(0,length(tmp),3)
for (i in 1:length(tmp)) {
v1 = strsplit(tmp[i],split='_')
v2 = as.numeric( strsplit(v1[[1]][3],split='.bmp') )
imNum[i,2] = v2
}
rm(v1); rm(v2); rm(tmp); rm(i)
imNum[,1] = all.dat$Subject[ind]
# Link up image with its baseline status
# Loop through subjects
for (n in 1:N) {
# Extract baseline status
ord = cbind( all.order[[n]]$numImage, all.order[[n]]$Base )
beg = 36*(n-1)
for (i in 1:nrow(ord)) {
for (j in 1:36)) {
if (imNum[beg+j,2] == ord[i,1]) imNum[beg+j,3]=ord[i,2]
}
}
}
ind = all.dat$Cond==6 # Select subset of trials
tmp = as.character(all.dat$imageIDT[ind]) # Convert to string
# Extract the image file name and isolate its unique number
imNum = matrix(0,length(tmp),3)
for (i in 1:length(tmp)) {
v1 = strsplit(tmp[i],split='_')
v2 = as.numeric( strsplit(v1[[1]][3],split='.bmp') )
imNum[i,2] = v2
}
rm(v1); rm(v2); rm(tmp); rm(i)
imNum[,1] = all.dat$Subject[ind]
# Link up image with its baseline status
# Loop through subjects
for (n in 1:N) {
# Extract baseline status
ord = cbind( all.order[[n]]$numImage, all.order[[n]]$Base )
beg = 36*(n-1)
for (i in 1:nrow(ord)) {
for (j in 1:36) {
if (imNum[beg+j,2] == ord[i,1]) imNum[beg+j,3]=ord[i,2]
}
}
}
imNum
n=1
ord = cbind( all.order[[n]]$numImage, all.order[[n]]$Base )
ord
beg = 36*(n-1)
bg
beg
i=1
j=1
imNum[beg+j,2] == ord[i,1]
for (j in 1:36) {
print ( if (imNum[beg+j,2] == ord[i,1]) )
}
for (j in 1:36) {
print ( imNum[beg+j,2] == ord[i,1] )
}
imNum
ord[i,1]
imNum[ind2,2]==22
imNum[ind2,2]
as.character(all.dat$imageIDT[ind])
ord
all.order[[1]]
sum(all.dat$Cond==6)
sum(all.dat$Cond==6)/6
sum(all.dat$Cond==5)/6
