'/',round(colMeans(stats),2)[3],sep=''),pos=3)
N = 24 # Sample size
CU = 54 # Number of cued images
BS = 18 # Number of baseline images
cu = .8
bs = .8
prp.cu.cmp = rnorm(N,cu,.1)
prp.cu.cmp[prp.cu.cmp > 1]=1
prp.cu.cmp[prp.cu.cmp < 0]=0
prp.bs.cmp = rnorm(N,bs,.1)
prp.bs.cmp[prp.bs.cmp > 1]=1
prp.bs.cmp[prp.bs.cmp < 0]=0
n.iter = 1000
dat = array(0,dim=c(n.iter,N,2))
stats = matrix(0,n.iter,3)
colnames(stats) = c('P','SEM_cu','SEM_bs')
for (it in 1:n.iter) {
x.cu = rbinom(N,CU,prp.cu.cmp)/CU
x.bs = rbinom(N,BS,prp.bs.cmp)/BS
dat[it,,] = cbind(x.cu,x.bs)
res = t.test(x.cu,x.bs,paired=T)
stats[it,1] = res$p.value
stats[it,2:3] = c(sd(x.cu),sd(x.bs))/sqrt(N)
}
x11()
par(mfrow=c(1,2))
plot(c(1,1000),c(0,1),type='n',main='',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,1],1,min),
1:n.iter,
apply(dat[,,1],1,max) )
segments( 1:n.iter,
apply(dat[,,1],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,1],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,1],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('Gen. val.: ',cu,' vs ',bs,sep=''),pos=3)
plot(c(1,1000),c(0,1),type='n',main='Baseline',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,2],1,min),
1:n.iter,
apply(dat[,,2],1,max) )
segments( 1:n.iter,
apply(dat[,,2],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,2],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,2],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('P < .05: ',
100*round(sum(stats[,1]<.05)/n.iter,2),'%',
'; SEM: ',round(colMeans(stats),2)[2],
'/',round(colMeans(stats),2)[3],sep=''),pos=3)
N = 24 # Sample size
CU = 54 # Number of cued images
BS = 18 # Number of baseline images
cu = .75
bs = .8
prp.cu.cmp = rnorm(N,cu,.1)
prp.cu.cmp[prp.cu.cmp > 1]=1
prp.cu.cmp[prp.cu.cmp < 0]=0
prp.bs.cmp = rnorm(N,bs,.1)
prp.bs.cmp[prp.bs.cmp > 1]=1
prp.bs.cmp[prp.bs.cmp < 0]=0
n.iter = 1000
dat = array(0,dim=c(n.iter,N,2))
stats = matrix(0,n.iter,3)
colnames(stats) = c('P','SEM_cu','SEM_bs')
for (it in 1:n.iter) {
x.cu = rbinom(N,CU,prp.cu.cmp)/CU
x.bs = rbinom(N,BS,prp.bs.cmp)/BS
dat[it,,] = cbind(x.cu,x.bs)
res = t.test(x.cu,x.bs,paired=T)
stats[it,1] = res$p.value
stats[it,2:3] = c(sd(x.cu),sd(x.bs))/sqrt(N)
}
x11()
par(mfrow=c(1,2))
plot(c(1,1000),c(0,1),type='n',main='',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,1],1,min),
1:n.iter,
apply(dat[,,1],1,max) )
segments( 1:n.iter,
apply(dat[,,1],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,1],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,1],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('Gen. val.: ',cu,' vs ',bs,sep=''),pos=3)
plot(c(1,1000),c(0,1),type='n',main='Baseline',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,2],1,min),
1:n.iter,
apply(dat[,,2],1,max) )
segments( 1:n.iter,
apply(dat[,,2],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,2],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,2],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('P < .05: ',
100*round(sum(stats[,1]<.05)/n.iter,2),'%',
'; SEM: ',round(colMeans(stats),2)[2],
'/',round(colMeans(stats),2)[3],sep=''),pos=3)
N = 24 # Sample size
CU = 54 # Number of cued images
BS = 18 # Number of baseline images
cu = .75
bs = .8
prp.cu.cmp = rnorm(N,cu,.1)
prp.cu.cmp[prp.cu.cmp > 1]=1
prp.cu.cmp[prp.cu.cmp < 0]=0
prp.bs.cmp = rnorm(N,bs,.1)
prp.bs.cmp[prp.bs.cmp > 1]=1
prp.bs.cmp[prp.bs.cmp < 0]=0
n.iter = 1000
dat = array(0,dim=c(n.iter,N,2))
stats = matrix(0,n.iter,3)
colnames(stats) = c('P','SEM_cu','SEM_bs')
for (it in 1:n.iter) {
x.cu = rbinom(N,CU,prp.cu.cmp)/CU
x.bs = rbinom(N,BS,prp.bs.cmp)/BS
dat[it,,] = cbind(x.cu,x.bs)
res = t.test(x.cu,x.bs,paired=T)
stats[it,1] = res$p.value
stats[it,2:3] = c(sd(x.cu),sd(x.bs))/sqrt(N)
}
x11()
par(mfrow=c(1,2))
plot(c(1,1000),c(0,1),type='n',main='',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,1],1,min),
1:n.iter,
apply(dat[,,1],1,max) )
segments( 1:n.iter,
apply(dat[,,1],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,1],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,1],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('Gen. val.: ',cu,' vs ',bs,sep=''),pos=3)
plot(c(1,1000),c(0,1),type='n',main='Baseline',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,2],1,min),
1:n.iter,
apply(dat[,,2],1,max) )
segments( 1:n.iter,
apply(dat[,,2],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,2],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,2],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('P < .05: ',
100*round(sum(stats[,1]<.05)/n.iter,2),'%',
'; SEM: ',round(colMeans(stats),2)[2],
'/',round(colMeans(stats),2)[3],sep=''),pos=3)
N = 24 # Sample size
CU = 54 # Number of cued images
BS = 18 # Number of baseline images
cu = .75
bs = .8
prp.cu.cmp = rnorm(N,cu,.1)
prp.cu.cmp[prp.cu.cmp > 1]=1
prp.cu.cmp[prp.cu.cmp < 0]=0
prp.bs.cmp = rnorm(N,bs,.1)
prp.bs.cmp[prp.bs.cmp > 1]=1
prp.bs.cmp[prp.bs.cmp < 0]=0
n.iter = 10000
dat = array(0,dim=c(n.iter,N,2))
stats = matrix(0,n.iter,3)
colnames(stats) = c('P','SEM_cu','SEM_bs')
for (it in 1:n.iter) {
x.cu = rbinom(N,CU,prp.cu.cmp)/CU
x.bs = rbinom(N,BS,prp.bs.cmp)/BS
dat[it,,] = cbind(x.cu,x.bs)
res = t.test(x.cu,x.bs,paired=T)
stats[it,1] = res$p.value
stats[it,2:3] = c(sd(x.cu),sd(x.bs))/sqrt(N)
}
x11()
par(mfrow=c(1,2))
plot(c(1,1000),c(0,1),type='n',main='',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,1],1,min),
1:n.iter,
apply(dat[,,1],1,max) )
segments( 1:n.iter,
apply(dat[,,1],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,1],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,1],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('Gen. val.: ',cu,' vs ',bs,sep=''),pos=3)
plot(c(1,1000),c(0,1),type='n',main='Baseline',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,2],1,min),
1:n.iter,
apply(dat[,,2],1,max) )
segments( 1:n.iter,
apply(dat[,,2],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,2],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,2],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('P < .05: ',
100*round(sum(stats[,1]<.05)/n.iter,2),'%',
'; SEM: ',round(colMeans(stats),2)[2],
'/',round(colMeans(stats),2)[3],sep=''),pos=3)
N = 24 # Sample size
CU = 54 # Number of cued images
BS = 18 # Number of baseline images
cu = .75
bs = .8
prp.cu.cmp = rnorm(N,cu,.1)
prp.cu.cmp[prp.cu.cmp > 1]=1
prp.cu.cmp[prp.cu.cmp < 0]=0
prp.bs.cmp = rnorm(N,bs,.1)
prp.bs.cmp[prp.bs.cmp > 1]=1
prp.bs.cmp[prp.bs.cmp < 0]=0
n.iter = 10000
dat = array(0,dim=c(n.iter,N,2))
stats = matrix(0,n.iter,3)
colnames(stats) = c('P','SEM_cu','SEM_bs')
for (it in 1:n.iter) {
x.cu = rbinom(N,CU,prp.cu.cmp)/CU
x.bs = rbinom(N,BS,prp.bs.cmp)/BS
dat[it,,] = cbind(x.cu,x.bs)
res = t.test(x.cu,x.bs,paired=T)
stats[it,1] = res$p.value
stats[it,2:3] = c(sd(x.cu),sd(x.bs))/sqrt(N)
}
x11()
par(mfrow=c(1,2))
plot(c(1,n.iter),c(0,1),type='n',main='',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,1],1,min),
1:n.iter,
apply(dat[,,1],1,max) )
segments( 1:n.iter,
apply(dat[,,1],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,1],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,1],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('Gen. val.: ',cu,' vs ',bs,sep=''),pos=3)
plot(c(1,n.iter),c(0,1),type='n',main='Baseline',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,2],1,min),
1:n.iter,
apply(dat[,,2],1,max) )
segments( 1:n.iter,
apply(dat[,,2],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,2],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,2],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('P < .05: ',
100*round(sum(stats[,1]<.05)/n.iter,2),'%',
'; SEM: ',round(colMeans(stats),2)[2],
'/',round(colMeans(stats),2)[3],sep=''),pos=3)
N = 24 # Sample size
CU = 54 # Number of cued images
BS = 18 # Number of baseline images
cu = .7
bs = .8
prp.cu.cmp = rnorm(N,cu,.1)
prp.cu.cmp[prp.cu.cmp > 1]=1
prp.cu.cmp[prp.cu.cmp < 0]=0
prp.bs.cmp = rnorm(N,bs,.1)
prp.bs.cmp[prp.bs.cmp > 1]=1
prp.bs.cmp[prp.bs.cmp < 0]=0
n.iter = 10000
dat = array(0,dim=c(n.iter,N,2))
stats = matrix(0,n.iter,3)
colnames(stats) = c('P','SEM_cu','SEM_bs')
for (it in 1:n.iter) {
x.cu = rbinom(N,CU,prp.cu.cmp)/CU
x.bs = rbinom(N,BS,prp.bs.cmp)/BS
dat[it,,] = cbind(x.cu,x.bs)
res = t.test(x.cu,x.bs,paired=T)
stats[it,1] = res$p.value
stats[it,2:3] = c(sd(x.cu),sd(x.bs))/sqrt(N)
}
x11()
par(mfrow=c(1,2))
plot(c(1,n.iter),c(0,1),type='n',main='',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,1],1,min),
1:n.iter,
apply(dat[,,1],1,max) )
segments( 1:n.iter,
apply(dat[,,1],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,1],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,1],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('Gen. val.: ',cu,' vs ',bs,sep=''),pos=3)
plot(c(1,n.iter),c(0,1),type='n',main='Baseline',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,2],1,min),
1:n.iter,
apply(dat[,,2],1,max) )
segments( 1:n.iter,
apply(dat[,,2],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,2],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,2],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('P < .05: ',
100*round(sum(stats[,1]<.05)/n.iter,2),'%',
'; SEM: ',round(colMeans(stats),2)[2],
'/',round(colMeans(stats),2)[3],sep=''),pos=3)
N = 50 # Sample size
CU = 54 # Number of cued images
BS = 18 # Number of baseline images
cu = .7
bs = .8
prp.cu.cmp = rnorm(N,cu,.1)
prp.cu.cmp[prp.cu.cmp > 1]=1
prp.cu.cmp[prp.cu.cmp < 0]=0
prp.bs.cmp = rnorm(N,bs,.1)
prp.bs.cmp[prp.bs.cmp > 1]=1
prp.bs.cmp[prp.bs.cmp < 0]=0
n.iter = 10000
dat = array(0,dim=c(n.iter,N,2))
stats = matrix(0,n.iter,3)
colnames(stats) = c('P','SEM_cu','SEM_bs')
for (it in 1:n.iter) {
x.cu = rbinom(N,CU,prp.cu.cmp)/CU
x.bs = rbinom(N,BS,prp.bs.cmp)/BS
dat[it,,] = cbind(x.cu,x.bs)
res = t.test(x.cu,x.bs,paired=T)
stats[it,1] = res$p.value
stats[it,2:3] = c(sd(x.cu),sd(x.bs))/sqrt(N)
}
x11()
par(mfrow=c(1,2))
plot(c(1,n.iter),c(0,1),type='n',main='',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,1],1,min),
1:n.iter,
apply(dat[,,1],1,max) )
segments( 1:n.iter,
apply(dat[,,1],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,1],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,1],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('Gen. val.: ',cu,' vs ',bs,sep=''),pos=3)
plot(c(1,n.iter),c(0,1),type='n',main='Baseline',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,2],1,min),
1:n.iter,
apply(dat[,,2],1,max) )
segments( 1:n.iter,
apply(dat[,,2],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,2],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,2],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('P < .05: ',
100*round(sum(stats[,1]<.05)/n.iter,2),'%',
'; SEM: ',round(colMeans(stats),2)[2],
'/',round(colMeans(stats),2)[3],sep=''),pos=3)
N = 50 # Sample size
CU = 54 # Number of cued images
BS = 18 # Number of baseline images
cu = .8
bs = .8
prp.cu.cmp = rnorm(N,cu,.1)
prp.cu.cmp[prp.cu.cmp > 1]=1
prp.cu.cmp[prp.cu.cmp < 0]=0
prp.bs.cmp = rnorm(N,bs,.1)
prp.bs.cmp[prp.bs.cmp > 1]=1
prp.bs.cmp[prp.bs.cmp < 0]=0
n.iter = 10000
dat = array(0,dim=c(n.iter,N,2))
stats = matrix(0,n.iter,3)
colnames(stats) = c('P','SEM_cu','SEM_bs')
for (it in 1:n.iter) {
x.cu = rbinom(N,CU,prp.cu.cmp)/CU
x.bs = rbinom(N,BS,prp.bs.cmp)/BS
dat[it,,] = cbind(x.cu,x.bs)
res = t.test(x.cu,x.bs,paired=T)
stats[it,1] = res$p.value
stats[it,2:3] = c(sd(x.cu),sd(x.bs))/sqrt(N)
}
x11()
par(mfrow=c(1,2))
plot(c(1,n.iter),c(0,1),type='n',main='',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,1],1,min),
1:n.iter,
apply(dat[,,1],1,max) )
segments( 1:n.iter,
apply(dat[,,1],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,1],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,1],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('Gen. val.: ',cu,' vs ',bs,sep=''),pos=3)
plot(c(1,n.iter),c(0,1),type='n',main='Baseline',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,2],1,min),
1:n.iter,
apply(dat[,,2],1,max) )
segments( 1:n.iter,
apply(dat[,,2],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,2],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,2],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('P < .05: ',
100*round(sum(stats[,1]<.05)/n.iter,2),'%',
'; SEM: ',round(colMeans(stats),2)[2],
'/',round(colMeans(stats),2)[3],sep=''),pos=3)
N = 50 # Sample size
CU = 54 # Number of cued images
BS = 18 # Number of baseline images
cu = .75
bs = .75
prp.cu.cmp = rnorm(N,cu,.1)
prp.cu.cmp[prp.cu.cmp > 1]=1
prp.cu.cmp[prp.cu.cmp < 0]=0
prp.bs.cmp = rnorm(N,bs,.1)
prp.bs.cmp[prp.bs.cmp > 1]=1
prp.bs.cmp[prp.bs.cmp < 0]=0
n.iter = 10000
dat = array(0,dim=c(n.iter,N,2))
stats = matrix(0,n.iter,3)
colnames(stats) = c('P','SEM_cu','SEM_bs')
for (it in 1:n.iter) {
x.cu = rbinom(N,CU,prp.cu.cmp)/CU
x.bs = rbinom(N,BS,prp.bs.cmp)/BS
dat[it,,] = cbind(x.cu,x.bs)
res = t.test(x.cu,x.bs,paired=T)
stats[it,1] = res$p.value
stats[it,2:3] = c(sd(x.cu),sd(x.bs))/sqrt(N)
}
x11()
par(mfrow=c(1,2))
plot(c(1,n.iter),c(0,1),type='n',main='',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,1],1,min),
1:n.iter,
apply(dat[,,1],1,max) )
segments( 1:n.iter,
apply(dat[,,1],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,1],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,1],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('Gen. val.: ',cu,' vs ',bs,sep=''),pos=3)
plot(c(1,n.iter),c(0,1),type='n',main='Baseline',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,2],1,min),
1:n.iter,
apply(dat[,,2],1,max) )
segments( 1:n.iter,
apply(dat[,,2],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,2],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,2],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('P < .05: ',
100*round(sum(stats[,1]<.05)/n.iter,2),'%',
'; SEM: ',round(colMeans(stats),2)[2],
'/',round(colMeans(stats),2)[3],sep=''),pos=3)
x11()
par(mfrow=c(1,2))
plot(c(1,n.iter),c(0,1),type='n',main='',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,1],1,min),
1:n.iter,
apply(dat[,,1],1,max) )
segments( 1:n.iter,
apply(dat[,,1],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,1],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,1],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('Gen. val.: ',cu,' vs ',bs,sep=''),pos=3)
plot(c(1,n.iter),c(0,1),type='n',main='Baseline',ylab='Proportion',
xlab='Iteration')
segments( 1:n.iter,
apply(dat[,,2],1,min),
1:n.iter,
apply(dat[,,2],1,max) )
segments( 1:n.iter,
apply(dat[,,2],1,quantile,prob=.25),
1:n.iter,
apply(dat[,,2],1,quantile,prob=.75), col='blue')
points( 1:n.iter, apply(dat[,,2],1,median), pch=19,col='red')
text(n.iter*.2,.1,paste('P < .05: ',
100*round(sum(stats[,1]<.05)/n.iter,2),'%',
'; SEM: ',round(colMeans(stats),2)[2],
'/',round(colMeans(stats),2)[3],sep=''),pos=3)
setwd("J:/Stuff/Kevin's Stuff/Postdoc/Wimber_et_al_2015_replication/Pilot_data_April_10_2015")
dir()
N = length(dir())/2
N
f_names = paste('Subject_',1:6,'.csv',sep='')
test = read.table(f_name[1],header=T,sep=',')
test = read.table(f_names[1],header=T,sep=',')
test
head(test)
test[test$Cond==6,'Accuracy']
test[test$Cond==6,'IDT']
test[test$Cond==6,'imageIDT']
test[test$Cond==5,'imageIDT']
test[test$Cond==4,'imageIDT']
